# nginx_site.conf for the Pencil Code server.
#
# It assumes the following directory layout:
# /srv/site/gym               - static content website
# /srv/site/animate           - static content website
# /srv/site/root              - the entire built project directory
# /srv/pencilcode.net/data    - data directory
# /srv/pencilcode.net/content - content directory

include /srv/site/root/nginx/upstream.conf;

log_format subdomain '$remote_addr $owner $uid_got [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent"';

log_format offdomain '$remote_addr $host $uid_got [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent"';
types {
  text/coffeescript	coffee;
  text/coffeescript	cs;
  text/cache-manifest	appcache;
}

proxy_cache_path /srv/site/proxycache keys_zone=one:10m max_size=200m;

# configuration of the top-level server on pencilcode.net
server {
  listen          80;
  listen          443 ssl;
  server_name     ~^(?<site>pencilcode\.net)$;
  include /srv/site/root/nginx/ssl_pencilcode.conf;
  include /srv/site/root/nginx/domain_root.conf;
}

# configuration of the top-level staging server on pencil.cc
server {
  listen          80;
  listen          443 ssl;
  server_name     ~^(?<site>pencil\.cc)$;
  include /srv/site/root/nginx/ssl_pencilcc.conf;
  include /srv/site/root/nginx/domain_root.conf;
}

# configuration of the top-level backup server on pencil.io
server {
  listen          80;
  server_name     ~^(?<site>pencil\.io)$;
  include /srv/site/root/nginx/domain_root.conf;
}

# configuration of the top-level backup server on pencil.codes
server {
  listen          80;
  server_name     ~^(?<site>pencil\.codes)$;
  include /srv/site/root/nginx/domain_root.conf;
}

# Serve "gym" documentation directories
server {
  listen 80;
  listen 443 ssl;
  include /srv/site/root/nginx/ssl_pencilcode.conf;
  server_name ~^(?<site>gym|ref|animate|blog|newgym|invent)\.pencilcode\.net$;
  access_log /var/log/nginx/$site.log;
  root /srv/site/$site;
  default_type text/plain;

  # Serve /log/ /img/ /proxy/ etc.
  include /srv/site/root/nginx/dir_util.conf;
}

# Serve experiment directory
server {
  listen 80;
  listen 443 ssl;
  include /srv/site/root/nginx/ssl_pencilcode.conf;
  server_name experiment.pencilcode.net;
  access_log /var/log/nginx/experiment.log;
  location = /robots.txt {
    return 200 "User-agent: *\nDisallow: /\n";
  }
  location / {
    if ($http_user_agent ~ (bot|agent|spider|crawler|extractor)) {
      return 403;
    }
    return 302 $scheme://pencilcode.net/;
  }
  location ~ ^/(.+?)(/.*)?$ {
    alias /home/$1/www$2;
    autoindex on;
  }
}

# Serve fish postreceive hook subdomain.
server {
  listen 80;
  listen 443 ssl;
  include /srv/site/root/nginx/ssl_pencilcode.conf;
  server_name ~^(?<site>fish)\.pencilcode\.net$;
  access_log /var/log/nginx/$site.log;
  location /pull/ {
    if ($http_user_agent ~ (bot|agent|spider|crawler|extractor|externalhit)) {
      return 403;
    }
    proxy_pass http://fish_node;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
  }
  location = /robots.txt {
    return 200 "User-agent: *\nDisallow: /\n";
  }
  location / {
    if ($http_user_agent ~ (bot|agent|spider|crawler|extractor)) {
      return 403;
    }
    return 302 $scheme://pencilcode.net/;
  }
}

# Redirect group.pencilcode.net to the user group.
server {
  listen 80;
  listen 443 ssl;
  include /srv/site/root/nginx/ssl_pencilcode.conf;
  server_name ~^group.(?<site>pencil(?:code\.net|\.cc|\.io|\.codes));
  access_log /var/log/nginx/offdomain.log offdomain;
  return 302 $scheme://groups.google.com/d/forum/pencilcode;
}

# Redirect developer, development.pencilcode.net to the sites
# page at dev.pencilcode.net.
server {
  listen 80;
  listen 443 ssl;
  include /srv/site/root/nginx/ssl_pencilcode.conf;
  server_name ~^develop\w*\.pencilcode\.net$;
  access_log /var/log/nginx/offdomain.log offdomain;
  # Not served over https.
  return 302 http://dev.pencilcode.net${request_uri};
}

# Redirect hack.pencilcode.net.
server {
  listen 80;
  listen 443 ssl;
  include /srv/site/root/nginx/ssl_pencilcode.conf;
  server_name hack.pencilcode.net;
  access_log /var/log/nginx/offdomain.log offdomain;
  # Not served over https.
  return 302 http://dev.pencilcode.net/hackathons;
}

# configuration of generic subdomain servers on pencilcode.net.
server {
  listen          80;
  listen          443 ssl;
  server_name ~^(?<owner>[^.]+)\.(?<site>pencilcode\.net)$;
  include /srv/site/root/nginx/ssl_pencilcode.conf;
  include /srv/site/root/nginx/domain_user.conf;
}

# configuration of generic subdomain servers on pencil.cc
server {
  listen          80;
  listen          443 ssl;
  server_name ~^(?<owner>[^.]+)\.(?<site>pencil\.cc)$;
  include /srv/site/root/nginx/ssl_pencilcc.conf;
  include /srv/site/root/nginx/domain_user.conf;
}

# configuration of generic subdomain servers on pencil.io
server {
  listen          80;
  server_name ~^(?<owner>[^.]+)\.(?<site>pencil\.io)$;
  include /srv/site/root/nginx/domain_user.conf;
}

# configuration of generic subdomain servers on pencil.codes
server {
  listen          80;
  server_name ~^(?<owner>[^.]+)\.(?<site>pencil\.codes)$;
  include /srv/site/root/nginx/domain_user.conf;
}

# Redirect non-pencilcode.net domains to pencilcode.net.
server {
  listen 80;
  server_name ~^(?<owner>[^.]+\.)?([^.]+\.[^.]+)$;
  access_log /var/log/nginx/offdomain.log offdomain;
# Allow google to see redirect pencilcode.com -> pencilcode.net.
#  location = /robots.txt {
#    return 200 "User-agent: *\nDisallow: /\n";
#  }
  location / {
    return 301 $scheme://${owner}pencilcode.net${request_uri};
  }
}
