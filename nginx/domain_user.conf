# Setup for user pencil subdomains.
root /srv/$site/data/$owner;

# common settings for a domain.
include /srv/site/root/nginx/domain_common.conf;

# Collapse repeated slashes (excpet within proxy directory).
if ($request_uri ~* "\/\/") {
  rewrite ^/(?!proxy)(.*) $scheme://$host$uri$is_args$args permanent;
}

# Detect XHR users.
set $xhr "";
if ($http_x_requested_with ~ XMLHttpRequest) {
  set $xhr X;
}

# No directory? redirect to root.
if (!-d /srv/$site/data/$owner) {
  set $action nouser$xhr;
}

# But on /save/ no-directory is ok.
if ($uri ~ ^/save/) {
  set $action save;
}

# But reserved filenames are not, even with save.
if (-f /srv/$site/data/$owner) {
  set $action nouser$xhr;
}

# The frame owner is special.
if ($owner = frame) {
  set $action frame;
}

# XHR request to no-user get a 404.
if ($action = nouserX) {
  return 404 "404 (Not Found)";
}

# Redirect ordinary no-users to the root.
if ($action = nouser) {
  return 302 http://$site/;
}

# Frame users get a special editor UI.
if ($action = frame) {
  set $editorfile framed;
}

# special directories for /log/ /img/ /proxy/ etc.
include /srv/site/root/nginx/dir_util.conf;

# serve user data via /save/ /load/ /edit/ /run/ /code/ /home/
include /srv/site/root/nginx/dir_data.conf;

# Homepage?  Look for index.html, then go to /edit/.
location = / {
  add_header      Access-Control-Allow-Origin *;
  add_header      X-XSS-Protection 0;
  try_files /index.html @root_redirect;
}

# Handle all other sorts of URLs.
location / {
  # Top URL is missing /home/ but points to user data.
  if (-e /srv/$site/data/$owner$uri) {
    set $toptest user;
  }
  # Top URL points to static data.
  if (-e /srv/$site/content$uri) {
    set $toptest static;
  }
  # Top URL points to special dir or editor files.
  if ($uri ~ ^/(editor|dir|framed)\.html$) {
    set $toptest special;
  }
  # Top URL points to ace files: don't redirect these.
  if ($uri ~ ^/lib/(?:ace|local)/) {
    set $toptest special;
  }
  # Top URL points to build version; don't redirect.
  if ($uri ~ ^/builddate.txt$) {
    set $toptest special;
  }
  # The static and user cases get redirected externally.
  if ($toptest = static) {
    return 302 http://$site$uri;
  }
  if ($toptest = user) {
    return 302 http://$host/home$uri;
  }
  # Also missing a slash on /edit gets redirected externally.
  rewrite ^/edit$ /edit/ permanent;
  # Special cases are redirected internally.
  root /srv/$site/content;
  add_header      Access-Control-Allow-Origin *;
  add_header      X-XSS-Protection 0;
  try_files $uri @root_redirect;
}

# Redirect lost files (but not XHR) to root.
location @root_redirect {
  if ($http_x_requested_with ~ XMLHttpRequest) {
    return 404 "404 (Not Found)";
  }
  return 302 /edit/;
}

